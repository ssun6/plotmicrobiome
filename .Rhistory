}
colnames(aldex_rd1)
length(which(aldex_rd1[,14]<0.1))
length(which(aldex_rd1[,25]<0.1))
length(which(aldex_rd1[,36]<0.1))
length(which(aldex_rd1[,47]<0.1))
length(which(aldex_rd1[,58]<0.1))
length(which(aldex_rd1[,69]<0.1))
head(sort(aldex_rd1[,14]))
rownames(aldex_rd1)[order(aldex_rd1[,14])[1:5]]
dim(aldex_rd2)
rownames(aldex_rd2)[grep("Gard",rownames(aldex_rd2))]="Gardnerella_spp"
p=ggplot(aldex_rd2, mapping=aes(x=we.ep.x.2, y=we.ep.y)) +geom_point(color = 'blue')+ theme_classic(base_size = 15) + labs(title="",x ="-log10(P)*direction(change) by race in douching group" , y = "-log10(P)*direction(change) by race in no douching group")+xlim(-8, 8)+ylim(-8, 8)
tax_lab=rownames(aldex_rd2)
tax_lab[aldex_rd3[,5]>0.5&aldex_rd3[,2]>0.5]=""
p+geom_text_repel(aes(label =tax_lab),size = 3.5,max.overlaps=20)+geom_hline(yintercept=0, linetype="dotted")+geom_vline(xintercept=0, linetype="dotted")+theme(axis.text=element_text(size=12),axis.title=element_text(size=12))
colnames(aldex_rd1)
dim(stir_norm2)
head(colnames(stir_norm2))
length(apply(stir_norm2,2,function(i){length(which(i!=0))}))
length(apply(stir_norm2,1,function(i){length(which(i!=0))}))
stir_norm_dm=stir_norm2[,apply(stir_norm2,1,function(i){length(which(i!=0))})>489*0.25]
stir_norm_dm=stir_norm2[,apply(stir_norm2,2,function(i){length(which(i!=0))})>489*0.25]
dim(stir_norm_dm)
aldex_rd=list()
levels1=levels(factor(meta2$rd))
k=1
for (i in 1:3){
for (j in c(2:4)[i:3]){
level2=levels1[c(i,j)]
meta3=meta2[meta2$rd%in%level2,]
stir_norm3=stir_norm_dm[rownames(meta3),]
aldex_rd1 <- aldex(t(stir_norm3), meta3$rd, mc.samples=128,test="t",effect=TRUE,include.sample.summary=FALSE,verbose=TRUE)
aldex_rd[[k]]=aldex_rd1
k=k+1
}
}
aldex_rd1=merge(aldex_rd[[1]],aldex_rd[[2]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
for (k in 3:6){
aldex_rd1=merge(aldex_rd1,aldex_rd[[k]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
}
aldex_rd2=-log10(aldex_rd1[,c(13,24,35,46,57,68)])*sign(aldex_rd1[,c(11,22,33,44,55,66)])
aldex_rd3=aldex_rd1[,c(14,25,36,47,58,69)]
colnames(aldex_rd3)
length(which(aldex_rd3[,1]<0.1))
length(which(aldex_rd3[,2]<0.1))
length(which(aldex_rd3[,3]<0.1))
length(which(aldex_rd3[,4]<0.1))
length(which(aldex_rd3[,5]<0.1))
length(which(aldex_rd3[,6]<0.1))
aldex_rd1=read.csv(file="/Users/shansun/Google Drive/engel/new_paper/0208NM/revision1/aldex2_rd.csv",row.names=1)
length(which(aldex_rd1[,9]<0.1))#3
length(which(aldex_rd1[,20]<0.1))#4
length(which(aldex_rd1[,31]<0.1))#5
length(apply(aldex_rd3,1,min))
aldex_rd=list()
levels1=levels(factor(meta2$rd))
k=1
for (i in 1:3){
for (j in c(2:4)[i:3]){
level2=levels1[c(i,j)]
meta3=meta2[meta2$rd%in%level2,]
stir_norm3=stir_norm2[rownames(meta3),]
aldex_rd1 <- aldex(t(stir_norm3), meta3$rd, mc.samples=128,test="t",effect=TRUE,include.sample.summary=FALSE,verbose=TRUE)
aldex_rd[[k]]=aldex_rd1
k=k+1
}
}
aldex_rd1=merge(aldex_rd[[1]],aldex_rd[[2]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
for (k in 3:6){
aldex_rd1=merge(aldex_rd1,aldex_rd[[k]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
}
#"1_0" "1_1" "2_0" "2_1"
aldex_rd[[1]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rd[[2]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rd[[3]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rd1=merge(aldex_rd[[1]],aldex_rd[[2]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
for (k in 3:6){
aldex_rd1=merge(aldex_rd1,aldex_rd[[k]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
}
aldex_rd2=-log10(aldex_rd1[,c(13,24,35,46,57,68)])*sign(aldex_rd1[,c(11,22,33,44,55,66)])
aldex_rd3=aldex_rd1[,c(14,25,36,47,58,69)]
length(which(aldex_rd3[,1]<0.1))
length(which(aldex_rd3[,4]<0.1))
length(which(aldex_rd3[,2]<0.1))
min(rowSums(stir_norm))
#rarefy
stir_count_melt=read.table(file="/Users/shansun/Google\ Drive/engel/test/test/Engel_16S_stirrups_summary_97_070819.txt",sep="|",quote="")
stir_count_melt1=stir_count_melt[,c(1,2,4)]
stir_count_melt1[,3]=as.numeric(as.character(stir_count_melt1[,3]))
stir_count2=acast(stir_count_melt1, V1~ V2,sum)
stir_count2[is.na(stir_count2)]=0
stir_count2=stir_count2[1:1068,]
stir_count_melt_p1=stir_count_melt[stir_count_melt[,3]=="AT",c(1,2,5)]
stir_count_p=acast(stir_count_melt_p1, V1~ V2)
stir_count_p[is.na(stir_count_p)]=0
stir_count_p=stir_count_p[1:1068,]
stir_count_p=cbind(stir_count_p,100-rowSums(stir_count_p))
colnames(stir_count_p)[337]="other"
stir_count_p=stir_count_p[which(rowSums(stir_count2)>1000),]
sort(rowSums(stir_count2))
stir_count=stir_count_p*mean(rowSums(stir_count2))/100
stir_count2=stir_count2[which(rowSums(stir_count2)>1000),]
rownames(stir_count2)=sapply(strsplit(rownames(stir_count2),"\\-"), "[[", 1)
meta1=meta[which(meta$C_MRACE%in%c(1,2)&meta$WHYPTB2%in%c(0,1,2)),]
meta1=meta1[intersect(rownames(stir_count2),rownames(meta1)),]
stir_norm=stir_count2[intersect(rownames(stir_count2),rownames(meta1)),]
stir_norm1=rrarefy(stir_norm, min(rowSums(stir_norm)))
stir_shan=vegan::diversity(stir_norm1,index = "shannon", MARGIN = 1, base = exp(1))
stir_simp=vegan::diversity(stir_norm1,index = "simpson", MARGIN = 1, base = exp(1))
stir_invsimp=vegan::diversity(stir_norm1,index = "invsimpson", MARGIN = 1, base = exp(1))
meta1$shannon=stir_shan
meta1$simp=stir_simp
meta1$invsimp=stir_invsimp
meta1$lcrisp=log10(stir_norm1[,266]+1)
meta1$liners=log10(stir_norm1[,272]+1)
stir_norm_d1=log10(stir_norm1+1)
gen_pcoa=capscale(stir_norm_d1~1,distance="bray")
var_per=round((gen_pcoa$CA$eig/sum(gen_pcoa$CA$eig))[1:6]*100,2)
pcoa_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
ggboxplot(meta1, x = "race_case", y = "shannon", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "Shannon Index")+rotate_x_text(45)
col_d=c("steelblue","lightblue","tomato","pink")
ggboxplot(meta1, x = "race_case", y = "shannon", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "Shannon Index")+rotate_x_text(45)
meta1$Case=c("T","S")[factor(meta1$C_CASE2)]
meta1$Race=c("W","B")[factor(meta1$C_MRACE)]
meta1$Douche=factor(c("D","N")[factor(meta1$douche)],levels=c("D","N"))
meta1$race_case=factor(paste(meta1$race1,meta1$case1,sep="_"))
meta1$Race_Case=factor(paste(meta1$Race,meta1$Case,sep="_"))
meta1$race_case
ggboxplot(meta1, x = "race_case", y = "shannon", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "Shannon Index")+rotate_x_text(45)
pdf("/Users/shansun/Google\ Drive/engel/new_paper/0208NM/revision1/new_rarefy_shannon_race_case_box.pdf",width=10,height=6)
ggboxplot(meta1, x = "race_case", y = "shannon", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "Shannon Index")+rotate_x_text(45)
dev.off()
pdf("/Users/shansun/Google\ Drive/engel/new_paper/0208NM/revision1/new_rarefy_lcrisp_race_case_box.pdf",width=10,height=6)
ggboxplot(meta1, x = "race_case", y = "lcrisp", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "L.crispatus")+rotate_x_text(45)
dev.off()
pdf("/Users/shansun/Google\ Drive/engel/new_paper/0208NM/revision1/new_rarefy_liners_race_case_box.pdf",width=10,height=6)
ggboxplot(meta1, x = "race_case", y = "liners", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "L.iners")+rotate_x_text(45)
dev.off()
table(meta1$race_case)
wilcox.test(meta1$shannon[meta1$race_case=="White_Term"],meta1$shannon[meta1$race_case=="Black_Term"])
#W = 43668, p-value = 0.0006541
wilcox.test(meta1$shannon[meta1$race_case=="White_SPTB"],meta1$shannon[meta1$race_case=="Black_SPTB"])
#W = 2830, p-value = 0.005846
wilcox.test(meta1$shannon[meta1$race_case=="White_Term"],meta1$shannon[meta1$race_case=="White_SPTB"])
#W = 16252, p-value = 0.7018
wilcox.test(meta1$shannon[meta1$race_case=="Black_Term"],meta1$shannon[meta1$race_case=="Black_SPTB"])
levels(factor(meta1$rc))
aldex_rc=list()
levels1=levels(factor(meta1$rc))
k=1
for (i in 1:3){
for (j in c(2:4)[i:3]){
level2=levels1[c(i,j)]
meta3=meta1[meta1$rc%in%level2,]
stir_norm3=stir_norm1[rownames(meta3),]
aldex_rc1 <- aldex(t(stir_norm3), meta3$rc, mc.samples=128,test="t",effect=TRUE,include.sample.summary=FALSE,verbose=TRUE)
aldex_rc[[k]]=aldex_rc1
k=k+1
}
}
levels1
#"1_0" "1_1" "2_0" "2_1"
aldex_rc[[1]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rc[[2]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rc[[3]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rc[[5]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
aldex_rc[[6]][c("Lactobacillus_iners","Lactobacillus_crispatus_cluster"),]
wilcox.test(meta1$lcrisp[meta1$race_case=="White_Term"],meta1$lcrisp[meta1$race_case=="Black_Term"])
#W = 59824, p-value = 0.0006187
wilcox.test(meta1$lcrisp[meta1$race_case=="White_SPTB"],meta1$lcrisp[meta1$race_case=="Black_SPTB"])
#W = 3815, p-value = 0.8142
wilcox.test(meta1$lcrisp[meta1$race_case=="White_Term"],meta1$lcrisp[meta1$race_case=="White_SPTB"])
#W = 20070, p-value = 0.002808
wilcox.test(meta1$lcrisp[meta1$race_case=="Black_Term"],meta1$lcrisp[meta1$race_case=="Black_SPTB"])
rowSums(stir_norm1)
rowSums(stir_norm)
wilcox.test(meta1$liners[meta1$race_case=="White_Term"],meta1$liners[meta1$race_case=="Black_Term"])
#W = 40784, p-value = 3.75e-06
wilcox.test(meta1$liners[meta1$race_case=="White_SPTB"],meta1$liners[meta1$race_case=="Black_SPTB"])
#W = 3489, p-value = 0.4504
wilcox.test(meta1$liners[meta1$race_case=="White_Term"],meta1$liners[meta1$race_case=="White_SPTB"])
#W = 14648, p-value = 0.07292
wilcox.test(meta1$liners[meta1$race_case=="Black_Term"],meta1$liners[meta1$race_case=="Black_SPTB"])
meta1$race_case=factor(meta1$race_case,levels=c("Black_Term","Black_SPTB","White_Term","White_SPTB"))
colnames(stir_norm1)[c(266,272)]
pdf("/Users/shansun/Google\ Drive/engel/new_paper/0208NM/revision1/new_rarefy_shannon_race_case_box.pdf",width=10,height=6)
ggboxplot(meta1, x = "race_case", y = "shannon", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "Shannon Index")+rotate_x_text(45)
dev.off()
pdf("/Users/shansun/Google\ Drive/engel/new_paper/0208NM/revision1/new_rarefy_lcrisp_race_case_box.pdf",width=10,height=6)
ggboxplot(meta1, x = "race_case", y = "lcrisp", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "L.crispatus")+rotate_x_text(45)
dev.off()
pdf("/Users/shansun/Google\ Drive/engel/new_paper/0208NM/revision1/new_rarefy_liners_race_case_box.pdf",width=10,height=6)
ggboxplot(meta1, x = "race_case", y = "liners", color = "race_case", add = "jitter", show.legend=TRUE,palette =col_d,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),plot.title= element_text(size=20),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=20),
axis.title=element_text(size=20),legend.text=element_text(size=20),legend.key.size = unit(1,"line"), legend.title=element_text(size=20)))+labs( x = "Race", y = "L.iners")+rotate_x_text(45)
dev.off()
min(rowSums(stir_norm))
#race and case
stir_norm=read.csv(file="/Users/shansun/Google Drive/engel/new_paper/0208NM/revision1/stir824.csv",row.names=1,header = T)
colSums(stir_norm)
rowSums(stir_norm)
colSums(stir_norm2)
rowSums(stir_norm2)
#douching
meta2=meta1[which(!is.na(meta1$douche)),]
stir_norm2=stir_norm[rownames(meta2),]
match(rownames(meta2),colnames(stir_norm2))
match(rownames(meta2),rownames(stir_norm2))
#douching
meta2=meta1[which(!is.na(meta1$douche)),]
stir_norm2=stir_norm[rownames(meta2),]
match(rownames(meta2),rownames(stir_norm2))
aldex_rd=list()
levels1=levels(factor(meta2$rd))
k=1
for (i in 1:3){
for (j in c(2:4)[i:3]){
level2=levels1[c(i,j)]
meta3=meta2[meta2$rd%in%level2,]
stir_norm3=stir_norm2[rownames(meta3),]
aldex_rd1 <- aldex(t(stir_norm3), meta3$rd, mc.samples=128,test="t",effect=TRUE,include.sample.summary=FALSE,verbose=TRUE)
aldex_rd[[k]]=aldex_rd1
k=k+1
}
}
aldex_rd1=merge(aldex_rd[[1]],aldex_rd[[2]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
for (k in 3:6){
aldex_rd1=merge(aldex_rd1,aldex_rd[[k]],by=0, all=T)
rownames(aldex_rd1)=aldex_rd1[,1]
}
aldex_rd2=-log10(aldex_rd1[,c(13,24,35,46,57,68)])*sign(aldex_rd1[,c(11,22,33,44,55,66)])
aldex_rd3=aldex_rd1[,c(14,25,36,47,58,69)]
rownames(aldex_rd2)[grep("Gard",rownames(aldex_rd2))]="Gardnerella_spp"
p=ggplot(aldex_rd2, mapping=aes(x=we.ep.x.2, y=we.ep.y)) +geom_point(color = 'blue')+ theme_classic(base_size = 15) + labs(title="",x ="-log10(P)*direction(change) by race in douching group" , y = "-log10(P)*direction(change) by race in no douching group")+xlim(-8, 8)+ylim(-8, 8)
tax_lab=rownames(aldex_rd2)
tax_lab[aldex_rd3[,5]>0.5&aldex_rd3[,2]>0.5]=""
p+geom_text_repel(aes(label =tax_lab),size = 3.5,max.overlaps=20)+geom_hline(yintercept=0, linetype="dotted")+geom_vline(xintercept=0, linetype="dotted")+theme(axis.text=element_text(size=12),axis.title=element_text(size=12))
p=ggplot(aldex_rd2, mapping=aes(x=we.ep.x.2, y=we.ep.y)) +geom_point(color = 'blue')+ theme_classic(base_size = 15) + labs(title="",x ="-log10(P)*direction(change) by race in douching group" , y = "-log10(P)*direction(change) by race in no douching group")+xlim(-8, 8)+ylim(-8, 8)
tax_lab=rownames(aldex_rd2)
tax_lab[aldex_rd3[,5]>0.5&aldex_rd3[,2]>0.5]=""
p+geom_text_repel(aes(label =tax_lab),size = 3.5,max.overlaps=20)+geom_hline(yintercept=0, linetype="dotted")+geom_vline(xintercept=0, linetype="dotted")+theme(axis.text=element_text(size=12),axis.title=element_text(size=12))
colnames(aldex_rd3)
colnames(aldex_rd2)
colnames(aldex_rd1)
length(which(aldex_rd3[,1]<0.1))#3
length(which(aldex_rd3[,2]<0.1))#3
<
length(which(aldex_rd3[,5]<0.1))#3
length(which(aldex_rd3[,6]<0.1))#3
aldex_rd3=aldex_rd1[,c(14,25,58,69)]
aldex_rd3=aldex_rd1[,c(13,14,24,25,57,58,68,69)]
colnames(aldex_rd3)
head(aldex_rd3)
write.csv(aldex_rd3,"/Users/shansun/Google Drive/engel/new_paper/0208NM/revision1/aldex2_rd_P_FDR.csv")
dim9stir_norm2
dim(stir_norm2)
match(rownames(meta2),colnames(stir_norm2))
match(rownames(meta2),rownames(stir_norm2))
table(meta2$douche)
i=1
t.test(stir_norm2[meta2$douche=="Douching",i]~meta2$race[meta2$douche=="Douching"])
which(meta2$douche=="Douching")
meta2$race
meta2$race1
t.test(stir_norm2[meta2$douche=="Douching",i]~meta2$race1[meta2$douche=="Douching"])
t1=t.test(stir_norm2[meta2$douche=="Douching",i]~meta2$race1[meta2$douche=="Douching"])
names(t1)
t1$estimate
t1$estimate[1]-t1$estimate[2]
t2=t.test(stir_norm2[meta2$douche=="No douching",i]~meta2$race1[meta2$douche=="No douching"])
t2$estimate
t2$estimate[1]-t2$estimate[2]
t.test(stir_norm2[meta2$race1=="Black",i]~meta2$douche[meta2$race1=="Black"])
t3$estimate[1]-t3$estimate[2]
t3=t.test(stir_norm2[meta2$race1=="Black",i]~meta2$douche[meta2$race1=="Black"])
t3$estimate[1]-t3$estimate[2]
t4=t.test(stir_norm2[meta2$race1=="White",i]~meta2$douche[meta2$race1=="White"])
t4$estimate
t4
sign1=matrix(nrow=ncol(stir_norm2),ncol=4)
for (i in 1:ncol(stir_norm2)){
t1=t.test(stir_norm2[meta2$douche=="Douching",i]~meta2$race1[meta2$douche=="Douching"])
if((t1$estimate[1]-t1$estimate[2])>0){
sign1[i,1]="Black"
}else{
sign1[i,1]="white"
}
t2=t.test(stir_norm2[meta2$douche=="No douching",i]~meta2$race1[meta2$douche=="No douching"])
if((t2$estimate[1]-t2$estimate[2])>0){
sign1[i,1]="Black"
}else{
sign1[i,1]="white"
}
t3=t.test(stir_norm2[meta2$race1=="Black",i]~meta2$douche[meta2$race1=="Black"])
if((t3$estimate[1]-t3$estimate[2])>0){
sign1[i,1]="No douching"
}else{
sign1[i,1]="Douching"
}
t4=t.test(stir_norm2[meta2$race1=="White",i]~meta2$douche[meta2$race1=="White"])
if((t4$estimate[1]-t4$estimate[2])>0){
sign1[i,1]="No douching"
}else{
sign1[i,1]="Douching"
}
}
sign1
colnames(stir_norm2)
sign1=matrix(nrow=ncol(stir_norm2),ncol=4)
for (i in 1:ncol(stir_norm2)){
t1=t.test(stir_norm2[meta2$douche=="Douching",i]~meta2$race1[meta2$douche=="Douching"])
if((t1$estimate[1]-t1$estimate[2])>0){
sign1[i,1]="Black"
}else{
sign1[i,1]="white"
}
t2=t.test(stir_norm2[meta2$douche=="No douching",i]~meta2$race1[meta2$douche=="No douching"])
if((t2$estimate[1]-t2$estimate[2])>0){
sign1[i,2]="Black"
}else{
sign1[i,2]="white"
}
t3=t.test(stir_norm2[meta2$race1=="Black",i]~meta2$douche[meta2$race1=="Black"])
if((t3$estimate[1]-t3$estimate[2])>0){
sign1[i,3]="No douching"
}else{
sign1[i,3]="Douching"
}
t4=t.test(stir_norm2[meta2$race1=="White",i]~meta2$douche[meta2$race1=="White"])
if((t4$estimate[1]-t4$estimate[2])>0){
sign1[i,4]="No douching"
}else{
sign1[i,4]="Douching"
}
}
rownames(sign1)=colnames(stir_norm2)
match(colnames(stir_norm2),rownames(aldex_rd3))
dim(aldex_rd3)
aldex_rd_f=merge(sign1,aldex_rd3,by=0)
head(aldex_rd_f)
dim(aldex_rd_f)
dim(aldex_rd3)
dim(sign1)
aldex_rd_f=aldex_rd_f[,-1]
head(aldex_rd_f)
aldex_rd_f=aldex_rd_f[,c(1,5,6,2,7,8,3,9,10,4,11,12)]
head(aldex_rd_f)
aldex_rd_f=merge(sign1,aldex_rd3,by=0)
rownames(aldex_rd_f)=aldex_rd_f[,1]
aldex_rd_f=aldex_rd_f[,-1]
head(aldex_rd_f)
aldex_rd_f=aldex_rd_f[,c(1,5,6,2,7,8,3,9,10,4,11,12)]
aldex_rd_f=aldex_rd_f[,c(1,5,6,2,7,8,3,9,10,4,11,12)]
aldex_rd_f=merge(sign1,aldex_rd3,by=0)
rownames(aldex_rd_f)=aldex_rd_f[,1]
aldex_rd_f=aldex_rd_f[,-1]
aldex_rd_f=aldex_rd_f[,c(1,5,6,2,7,8,3,9,10,4,11,12)]
head(aldex_rd_f)
length(which(aldex_rd3[,2]<0.1))#3
length(which(aldex_rd3[,4]<0.1))#4
length(which(aldex_rd3[,6]<0.1))#0
length(which(aldex_rd3[,8]<0.1))#0
write.csv(aldex_rd_f,"/Users/shansun/Google Drive/engel/new_paper/0208NM/revision1/aldex2_rd_P_FDR.csv")
taxa_dir1="/Users/shansun/Google\ Drive/mc_set1/all/se/dada2/biom-with-taxonomy.biom"
taxa_tab1=format_asv(taxa_file = taxa_dir1,biom=T,onefile = T,ASV=T)
dim(taxa_tab1)
472/2
colnames(taxa_tab1)=gsub("\\.ASC","_ASC",colnames(taxa_tab1))
colnames(taxa_tab1)=gsub("\\.DES","_DES",colnames(taxa_tab1))
colnames(taxa_tab1)=gsub("\\.","",colnames(taxa_tab1))
metadata_dir="/Users/shansun/Google\ Drive/mc_set1/metadata_combined.csv"
#format metadata
metadata1=meta_format(metadata=metadata_dir,metadata_sep=",",meta_sample_name_col=1)
colnames(taxa_tab1)
rownames(metadata1)
setdiff(colnames(taxa_tab1),rownames(metadata1))
length(intersect(colnames(taxa_tab1),rownames(metadata1)))
424/2
intersect(colnames(taxa_tab1),rownames(metadata1))
#subset the abundance table to only include samples for test
tab_s=table_subset(taxa_table = taxa_tab1,metadata=metadata1,stratify_by_metadata="",stratify_by_value="",prevalence_cutoff=0.1, abundance_cutoff=0)
dim(tab_s)
tab1=tab_s[,intersect(colnames(tab_s),rownames(metadata1))]
metadata1=metadata1[match(intersect(colnames(tab_s),rownames(metadata1)),rownames(metadata1)),]
dim(metadata1)
tab_s=table_subset(taxa_table = taxa_tab1,metadata=metadata1,stratify_by_metadata="location",stratify_by_value="ASC",prevalence_cutoff=0, abundance_cutoff=0)
metadata2=metadata1[match(colnames(tab_s),rownames(metadata1)),]
dim(metadata2)
table(metadata2$Case_Ctrl)
table(metadata2$Case_Ctrl_Num)
table(metadata2$Case_Ctrl_Int)
dim(tab_s)
dim(taxa_tab1)
length(intersect(colnames(taxa_tab1),rownames(metadata1)))
setdiff(colnames(taxa_tab1),rownames(metadata1))
dim(metadata1)
dim(metadata2)
dim(tab_s)
is.na(metadata2$Case_Ctrl)
which(is.na(metadata2$Case_Ctrl))
match(colnames(tab_s),rownames(metadata2))
metadata2=metadata2[which(!is.na(metadata2$Case_Ctrl)),]
dim(metadata2)
metadata2=metadata1[match(colnames(tab_s),rownames(metadata1)),]
tab_s=tab_s[,which(!is.na(metadata2$Case_Ctrl))]
metadata2=metadata2[which(!is.na(metadata2$Case_Ctrl)),]
match(colnames(tab_s),rownames(metadata2))
length(table(metadata2$external_subject_id[which(metadata2$Case_Ctrl=="Case")]))
length(table(metadata2$external_subject_id[which(metadata2$Case_Ctrl=="Control")]))
t.test(metadata1$patient_age~metadata1$Case_Ctrl)
#62.32000              53.63729
aggregate(metadata1$patient_age~metadata1$Case_Ctrl,FUN=sd)
length(which(is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Control")])))
length(which(is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Case")])))
length(which(!is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Control")])))
length(which(is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Case")])))
length(which(!is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Case")])))
table(metadata2$Sex[which(metadata2$Case_Ctrl=="Case")])/length(na.omit(metadata2$Sex[which(metadata2$Case_Ctrl=="Case")]))
table(metadata2$Sex[which(metadata2$Case_Ctrl=="Control")])/length(na.omit(metadata2$Sex[which(metadata2$Case_Ctrl=="Control")]))
which(is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Case")]))
which(is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Control")]))
which(!is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Case")]))
length(which(!is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Control")])))
length(which(!is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Control")])))
table(metadata1$race[which(metadata1$Case_Ctrl=="Case")])/length(na.omit(metadata1$race[which(metadata1$Case_Ctrl=="Case")]))
table(metadata1$race[which(metadata1$Case_Ctrl=="Control")])/length(na.omit(metadata1$race[which(metadata1$Case_Ctrl=="Control")]))
length(which(!is.na(metadata1$race[which(metadata1$Case_Ctrl=="Case")])))
length(which(!is.na(metadata1$race[which(metadata1$Case_Ctrl=="Control")])))
table(metadata2$race[which(metadata2$Case_Ctrl=="Case")])/length(na.omit(metadata2$race[which(metadata2$Case_Ctrl=="Case")]))
table(metadata2$race[which(metadata2$Case_Ctrl=="Control")])/length(na.omit(metadata2$race[which(metadata2$Case_Ctrl=="Control")]))
length(which(is.na(metadata2$race[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$race[which(metadata2$Case_Ctrl=="Control")])))
length(which(!is.na(metadata2$race[which(metadata2$Case_Ctrl=="Case")])))
length(which(!is.na(metadata2$race[which(metadata2$Case_Ctrl=="Control")])))
table(metadata2$grade_school[which(metadata2$Case_Ctrl=="Case")])/length(na.omit(metadata2$grade_school[which(metadata2$Case_Ctrl=="Case")]))
table(metadata2$grade_school[which(metadata2$Case_Ctrl=="Control")])/length(na.omit(metadata2$grade_school[which(metadata2$Case_Ctrl=="Control")]))
sum(table(metadata2$grade_school[which(metadata2$Case_Ctrl=="Control")])/length(na.omit(metadata2$grade_school[which(metadata2$Case_Ctrl=="Control")])))
sum(table(metadata2$grade_school[which(metadata2$Case_Ctrl=="Case")])/length(na.omit(metadata2$grade_school[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$grade_school[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$grade_school[which(metadata2$Case_Ctrl=="Control")])))
t.test(metadata1$BMI~metadata1$Case_Ctrl)
#25.16974              29.42424
aggregate(metadata1$patient_age~metadata1$Case_Ctrl,FUN=sd)
t.test(metadata2$patient_age~metadata2$Case_Ctrl)
aggregate(metadata2$patient_age~metadata2$Case_Ctrl,FUN=sd)
t.test(metadata2$BMI~metadata2$Case_Ctrl)
#   mean in group Case mean in group Control
#25.16974              29.48244
aggregate(metadata2$BMI~metadata2$Case_Ctrl,FUN=sd)
#                Case       6.24518
#             Control       6.91174
length(which(is.na(metadata2$BMIe[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$BMI[which(metadata2$Case_Ctrl=="Control")])))
length(which(!is.na(metadata2$BMI[which(metadata2$Case_Ctrl=="Control")])))
#                Case       6.24518
#             Control       6.91174
length(which(!is.na(metadata2$BMIe[which(metadata2$Case_Ctrl=="Case")])))
#                Case       6.24518
#             Control       6.91174
length(which(!is.na(metadata2$BMI[which(metadata2$Case_Ctrl=="Case")])))
length(which(!is.na(metadata2$BMI[which(metadata2$Case_Ctrl=="Control")])))
#                Case       6.24518
#             Control       6.91174
length(which(is.na(metadata2$BMI[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$BMI[which(metadata2$Case_Ctrl=="Control")])))
length(which(is.na(metadata2$grade_school[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$grade_school[which(metadata2$Case_Ctrl=="Control")])))
length(which(is.na(metadata2$race[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$race[which(metadata2$Case_Ctrl=="Control")])))
length(which(is.na(metadata2$race[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$race[which(metadata2$Case_Ctrl=="Control")])))
which(is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Case")]))
which(is.na(metadata2$Sex[which(metadata2$Case_Ctrl=="Control")]))
#   metadata2$Case_Ctrl metadata2$patient_age
#               Case              13.65828
#             Control              11.69257
length(which(is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Case")])))
length(which(is.na(metadata2$patient_age[which(metadata2$Case_Ctrl=="Control")])))
