ordiellipse(pcoa12, map_s[,1], kind="se", conf=0.95, lwd=1, draw = "lines", col=col11[j],show.groups=levels(factor(map_s[,1]))[j],label=T,font=2,cex=1.3)
}
legend("topright",levels(factor(map_s[,1])), cex=1.2, bty="n", col=col11, pch=16)
}
dev.off()
}
#4. We will separate out PCoA plots to compare JA216, JA218, JA226 (7 vs. 3 vs. 1 strain(s)).
#run2
setwd("/Users/shansun/Google\ Drive/ecoli/figures/PCoA_alphaDiv_run2/")
taxl=c("phylum","class","order","family","genus","species","ASV")
comp=list()
comp[[1]]=c("JA216","JA218")
comp[[2]]=c("JA216","JA226")
comp[[3]]=c("JA218","JA226")
comp_names=c("JA216 vs JA218","JA216 vs JA226","JA218 vs JA226")
map=read.csv(file="mappingfile_16S_r2_2020.csv",quote="", header=T)[,1:11]
tissue_names=names(table(map$tissue))[c(1,2,4,7)]
for (n in 1:6){
print(n)
fname=paste0("table_l",n+1,"/feature-table.biom")
biom= read.biom(fname,tree=FALSE)
tab=as.matrix(biom$counts)
colnames(tab)=sapply(colnames(tab),function(i){paste0("s",substr(i,4,6))})
tab=tab[,which(!colnames(tab)%in%c("s221","s222","s223","s224","s225","s226"))]
tab1=tab[,order(colnames(tab))]
tab1=tab1[!rowSums(tab1)==0,]
tab1=tab1[,which(colSums(tab1)>2000)]
tab1=t(t(tab1)/colSums(tab1))*mean(colSums(tab1))
tab2=log10(tab1+1)
map=read.csv(file="mappingfile_16S_r2_2020.csv",quote="", header=T)[,1:11]
rownames(map)=map[,1]
map=map[,-1]
map=map[which(map$Description%in%c("JA216","JA218","JA226")),]
map=map[which(!is.na(map$Description)),]
map=map[intersect(colnames(tab1),rownames(map)),]
map=map[,-c(1,2)]
tab1=tab1[,intersect(colnames(tab1),rownames(map))]
tab2=tab2[,intersect(colnames(tab2),rownames(map))]
tab1=tab1[,!map$tissue%in%c("inoculum","PCR_negative_control","water_negative_control")]
tab2=tab2[,!map$tissue%in%c("inoculum","PCR_negative_control","water_negative_control")]
map=map[!map$tissue%in%c("inoculum","PCR_negative_control","water_negative_control"),]
map$tissue=droplevels(factor(map$tissue))
map$shannon=vegan::diversity(tab1,index = "shannon", MARGIN = 2, base = exp(1))
map$simp=vegan::diversity(tab1,index = "simpson", MARGIN = 2, base = exp(1))
map$invsimp=vegan::diversity(tab1,index = "invsimpson", MARGIN = 2, base = exp(1))
pv=matrix(nrow=4,ncol=3)
for (m1 in 1:4){
for (m2 in 1:3){
map_s=map[map$Description%in%comp[[m2]]&map$tissue==tissue_names[m1],]
a=try(wilcox.test(map_s$shannon~map_s$Description))
if(class(a)=="try-error"){
pv[m1,m2]=NA
}else{
pv[m1,m2]=a$p.value
}
}
}
colnames(pv)=comp_names
rownames(pv)=tissue_names
fdrs=matrix(p.adjust(pv,method="fdr"),ncol=3)
colnames(fdrs)=comp_names
rownames(fdrs)=tissue_names
write.csv(pv, file=paste0("shannon_wilcox_",taxl[n],".csv"))
write.csv(fdrs, file=paste0("shannon_wilcox_fdrs_",taxl[n],".csv"))
if(any(fdrs<0.1)){
main2=paste(rownames(fdrs)[which(fdrs<0.1,T)[,1]], colnames(fdrs)[which(fdrs<0.1,T)[,2]]," FDR =",round(fdrs[which(fdrs<0.1)],5))
main1=paste(main2,collapse="\n")
}else{
main1="not significant"
}
col11=c("red","blue","green")
gplots1=list()
gplots1[[1]]=ggboxplot(map, x = "tissue", y = "shannon", color = "Description", palette = col11, add = "jitter", lwd = 0.8, ylab = "Shannon Index",title=main1,
ggtheme = theme_bw()+theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),axis.text = element_text(size=15),title=element_text(size=5),
axis.title=element_text(size=15),legend.text=element_text(size=10),legend.title=element_text(size=15)))+rotate_x_text(45)
ggexport(
plotlist = gplots1, filename = paste0("shannon_boxplot_",taxl[n],".pdf"),
ncol = 1, nrow = 1,width=7,height=5
)
ado_p=matrix(nrow=4,ncol=6)
pdf(paste0("pcoa_",taxl[n],".pdf"),height=10,width=10,onefile = T)
for (m1 in 1:4){
par(mfrow=c(2,2),mar=c(5,5,3,3))
for (m2 in 1:3){
if(m2==1){
col11=c("red","blue")
}else if(m2==2){
col11=c("red","green")
}else{
col11=c("blue","green")
}
tab_s=tab1[,map$Description%in%comp[[m2]]&map$tissue==tissue_names[m1]]
map_s=map[map$Description%in%comp[[m2]]&map$tissue==tissue_names[m1],]
map_s=droplevels(map_s)
if (length(levels(factor(map_s$Description)))==1){
next
}
ado_p[m1,c(m2,m2+3)]=as.numeric(adonis(t(tab_s)~map_s$Description)$"aov.tab"[1,5:6])
gen_pcoa=capscale(t(tab_s)~1,distance="bray")
var_per=round((gen_pcoa$CA$eig/sum(gen_pcoa$CA$eig))[1:6]*100,2)
pcoa_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
main1=paste(tissue_names[m1],"\nR2 =",round(ado_p[m1,m2],5),"\n P=",ado_p[m1,m2+3])
pcoa12=ordiplot(gen_pcoa,choices=c(1,2),type="none",cex.lab=1.5,xlab=pcoa_p[1],ylab=pcoa_p[2],main=main1,xlim=c(min(summary(gen_pcoa)$sites[,1])-1.2,max(summary(gen_pcoa)$sites[,1])+0.5))
col3=col11[factor(map_s[,1])]
pch1=16
points(pcoa12,"sites",col=col3,pch=pch1,cex=1.5)
for (j in 1:length(levels(factor(map_s[,1])))){
ordiellipse(pcoa12, map_s[,1], kind="se", conf=0.95, lwd=1, draw = "lines", col=col11[j],show.groups=levels(factor(map_s[,1]))[j],label=T,font=2,cex=1.3)
}
legend("topright",levels(factor(map_s[,1])), cex=1.2, bty="n", col=col11, pch=16)
}
par(mfrow=c(1,1),mar=c(5,5,3,3))
tab_s=tab1[,map$tissue==tissue_names[m1]]
map_s=map[map$tissue==tissue_names[m1],]
gen_pcoa=capscale(t(tab_s)~1,distance="bray")
var_per=round((gen_pcoa$CA$eig/sum(gen_pcoa$CA$eig))[1:6]*100,2)
pcoa_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
ado1=as.numeric(adonis(t(tab_s)~map_s$Description)$"aov.tab"[1,5:6])
main1=paste(tissue_names[m1],"\nR2 =",round(ado1[1],5),"\n P=",ado1[2])
pcoa12=ordiplot(gen_pcoa,choices=c(1,2),type="none",cex.lab=1.5,xlab=pcoa_p[1],ylab=pcoa_p[2],main=main1,xlim=c(min(summary(gen_pcoa)$sites[,1])-1.2,max(summary(gen_pcoa)$sites[,1])+0.5))
col11=c("red","blue","green")
col3=col11[factor(map_s[,1])]
pch1=16
points(pcoa12,"sites",col=col3,pch=pch1,cex=1.5)
for (j in 1:length(levels(factor(map_s[,1])))){
ordiellipse(pcoa12, map_s[,1], kind="se", conf=0.95, lwd=1, draw = "lines", col=col11[j],show.groups=levels(factor(map_s[,1]))[j],label=T,font=2,cex=1.3)
}
legend("topright",levels(factor(map_s[,1])), cex=1.2, bty="n", col=col11, pch=16)
}
dev.off()
}
runApp('~/git/plotmicrobiome')
path_table="./data-raw/humann2_pathway.txt"
path_tab1=format_pathway(taxa_file = path_table,sep="\t")
metadata_dir="./data-raw/metadata_mali.csv"
devtools::install_github("ssun6/plotmicrobiome")
library(plotmicrobiome)
path_tab1=format_pathway(taxa_file = path_table,sep="\t")
setwd("/Users/shansun/git/plotmicrobiome")
path_table="./data-raw/humann2_pathway.txt"
path_tab1=format_pathway(taxa_file = path_table,sep="\t")
metadata_dir="./data-raw/metadata_mali.csv"
metadata1=meta_format(metadata=metadata_dir,metadata_sep=",",meta_sample_name_col=1)
tab_s=table_subset(taxa_table = path_tab1,metadata=metadata1,stratify_by_metadata="time",stratify_by_value="1",taxa_file=F)
tab_s=table_subset(taxa_table = path_tab1,metadata=metadata1,one_file=T)
table_subset
tab_s=table_subset(taxa_table = path_tab1,metadata=metadata1,one_level = T,prevalence_cutoff = 0.25)
#PCoA plot
mds_plot(taxa_table = tab_s, metadata=metadata1,one_level=T,test_metadata="group",method_mds = "pcoa",palette_group=c("red","blue","orange","green"),distance_type="bray")
#taxa boxplot
fdrs1=stat_test(taxa_table =tab_s,metadata=metadata1,test_metadata="group",method="wilcoxon")
taxa_boxplot(taxa_table = tab_s, metadata=metadata1,one_level=T,test_metadata="group",fdrs=fdrs1,log_norm=T,cutoff=0.01,palette_group=c("red","blue","orange","green"))
taxa_boxplot_download(taxa_table = tab_s, metadata=metadata1,one_level=T,test_metadata="group",fdrs=fdrs1,log_norm=T,cutoff=0.01,palette_group=c("red","blue","orange","green"))
taxa_table = tab_s
metadata=metadata1
one_level=T
test_metadata="group"
fdrs=fdrs1
log_norm=T
cutoff=0.01
palette_group=c("red","blue","orange","green")
tab=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[match(intersect(colnames(tab),rownames(metadata)),rownames(metadata)),]
if(is.factor(metadata[,test_metadata])){
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
}else{
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
}
if(test_metadata_order!="default"){
metadata[,test_metadata]=factor(metadata[,test_metadata],levels=test_metadata_order)
}
tab1=tab
fdrs1=fdrs
sig_l=length(which(fdrs1[,3]<cutoff))
tab1n=tab1[order(fdrs1[,2]),][1:sig_l,]
pval_s=fdrs1[,2][order(fdrs1[,2])][1:sig_l]
fdrs_s=fdrs1[,3][order(fdrs1[,2])][1:sig_l]
if(log_norm){
tab1n=log10(tab1n+1)
}
par(mfrow=c(3,3),mar=c(5,5,5,5))
for (i in 1:nrow(tab1n)){
if (one_level){
tax_name=rownames(tab1n)[i]
tax_name=sapply(strsplit( tax_name,"\""),"[[",2)
if(nchar(tax_name)>50&nchar(tax_name)<100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = " "),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = " "))
}
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_l1=round(tax_l/3)
tax_l2=round(tax_l/3*2)
tax_name1=paste0(paste(tax_s[1:tax_l1],collapse = " "),"\n",paste(tax_s[(tax_l1+1):tax_l2],collapse = " "),"\n",paste(tax_s[(tax_l2+1):tax_l],collapse = " "))
}
}else{
tax_name1=tax_name
}
}else{
tax_name=paste0("p__",strsplit(rownames(tab1n)[i],"--p__")[[1]][2])
if(nchar(tax_name)>60&nchar(tax_name)<100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = ";"),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = ";"))
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_name1=paste0(paste(tax_s[1:3],collapse = ";"),"\n",paste(tax_s[4:5],collapse = ";"),"\n",paste(tax_s[6:tax_l],collapse = ";"))
}else{
tax_name1=tax_name
}
}
if(pval_s[i]<0.001){
wil_p=formatC(pval_s[i], format = "e", digits = 2)
}else{
wil_p=formatC(pval_s[i], digits = 2)
}
if(fdrs_s[i]<0.001){
wil_fdr=formatC(fdrs_s[i], format = "e", digits = 2)
}else{
wil_fdr=formatC(fdrs_s[i], digits = 2)
}
boxplot(as.numeric(tab1n[i,])~metadata[,test_metadata],main=paste(tax_name1,"\nP =",wil_p,"\nFDR =",wil_fdr),border=palette_group,col="white",xlab=test_metadata,ylab="normalized abundance",cex.main=0.8,las=xlab_direction)
stripchart(as.numeric(tab1n[i,])~metadata[,test_metadata],vertical = TRUE,  method = "jitter", add = TRUE, pch = 16, col = palette_group)
}
i
one_level
tax_name=rownames(tab1n)[i]
tax_name=sapply(strsplit( tax_name,"\""),"[[",2)
tax_name
if(nchar(tax_name)>50&nchar(tax_name)<100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = " "),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = " "))
}
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_l1=round(tax_l/3)
tax_l2=round(tax_l/3*2)
tax_name1=paste0(paste(tax_s[1:tax_l1],collapse = " "),"\n",paste(tax_s[(tax_l1+1):tax_l2],collapse = " "),"\n",paste(tax_s[(tax_l2+1):tax_l],collapse = " "))
}
}else{
tax_name1=tax_name
}
if (one_level){
tax_name=rownames(tab1n)[i]
tax_name=sapply(strsplit( tax_name,"\""),"[[",2)
if(nchar(tax_name)>50&nchar(tax_name)<100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = " "),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = " "))
}
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_l1=round(tax_l/3)
tax_l2=round(tax_l/3*2)
tax_name1=paste0(paste(tax_s[1:tax_l1],collapse = " "),"\n",paste(tax_s[(tax_l1+1):tax_l2],collapse = " "),"\n",paste(tax_s[(tax_l2+1):tax_l],collapse = " "))
}
}else{
tax_name1=tax_name
}
}else{
tax_name=paste0("p__",strsplit(rownames(tab1n)[i],"--p__")[[1]][2])
if(nchar(tax_name)>60&nchar(tax_name)<100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = ";"),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = ";"))
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_name1=paste0(paste(tax_s[1:3],collapse = ";"),"\n",paste(tax_s[4:5],collapse = ";"),"\n",paste(tax_s[6:tax_l],collapse = ";"))
}else{
tax_name1=tax_name
}
}
par(mfrow=c(3,3),mar=c(5,5,5,5))
for (i in 1:nrow(tab1n)){
if (one_level){
tax_name=rownames(tab1n)[i]
if(nchar(tax_name)>50&nchar(tax_name)<100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = " "),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = " "))
}
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_l1=round(tax_l/3)
tax_l2=round(tax_l/3*2)
tax_name1=paste0(paste(tax_s[1:tax_l1],collapse = " "),"\n",paste(tax_s[(tax_l1+1):tax_l2],collapse = " "),"\n",paste(tax_s[(tax_l2+1):tax_l],collapse = " "))
}
}else{
tax_name1=tax_name
}
}else{
tax_name=paste0("p__",strsplit(rownames(tab1n)[i],"--p__")[[1]][2])
if(nchar(tax_name)>60&nchar(tax_name)<100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = ";"),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = ";"))
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_name1=paste0(paste(tax_s[1:3],collapse = ";"),"\n",paste(tax_s[4:5],collapse = ";"),"\n",paste(tax_s[6:tax_l],collapse = ";"))
}else{
tax_name1=tax_name
}
}
if(pval_s[i]<0.001){
wil_p=formatC(pval_s[i], format = "e", digits = 2)
}else{
wil_p=formatC(pval_s[i], digits = 2)
}
if(fdrs_s[i]<0.001){
wil_fdr=formatC(fdrs_s[i], format = "e", digits = 2)
}else{
wil_fdr=formatC(fdrs_s[i], digits = 2)
}
boxplot(as.numeric(tab1n[i,])~metadata[,test_metadata],main=paste(tax_name1,"\nP =",wil_p,"\nFDR =",wil_fdr),border=palette_group,col="white",xlab=test_metadata,ylab="normalized abundance",cex.main=0.8,las=xlab_direction)
stripchart(as.numeric(tab1n[i,])~metadata[,test_metadata],vertical = TRUE,  method = "jitter", add = TRUE, pch = 16, col = palette_group)
}
pval_s[i]
formatC(pval_s[i], format = "e", digits = 2)
pval_s
taxa_boxplot_download=function(taxa_table = NULL, metadata=NULL,test_metadata=NULL,test_metadata_order="default",fdrs=NULL,log_norm=T,cutoff=0.1,xlab_direction=1,palette_group=c("red","blue","orange","green"),taxa_shown="",one_level=F){
tab=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[match(intersect(colnames(tab),rownames(metadata)),rownames(metadata)),]
if(is.factor(metadata[,test_metadata])){
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
}else{
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
}
if(test_metadata_order!="default"){
metadata[,test_metadata]=factor(metadata[,test_metadata],levels=test_metadata_order)
}
if(taxa_shown==""){
tab1=tab
fdrs1=fdrs
}else{
tab1=tab[grep(taxa_shown,rownames(tab)),]
fdrs1=fdrs[grep(taxa_shown,rownames(fdrs)),]
}
sig_l=length(which(fdrs1[,3]<cutoff))
tab1n=tab1[order(fdrs1[,2]),][1:sig_l,]
pval_s=fdrs1[,2][order(fdrs1[,2])][1:sig_l]
fdrs_s=fdrs1[,3][order(fdrs1[,2])][1:sig_l]
if(log_norm){
tab1n=log10(tab1n+1)
}
par(mfrow=c(3,3),mar=c(5,5,5,5))
for (i in 1:nrow(tab1n)){
if (one_level){
tax_name=rownames(tab1n)[i]
if(nchar(tax_name)>50&nchar(tax_name)<100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = " "),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = " "))
}
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name," ")[[1]]
tax_l=length(tax_s)
if(tax_l!=1){
tax_l1=round(tax_l/3)
tax_l2=round(tax_l/3*2)
tax_name1=paste0(paste(tax_s[1:tax_l1],collapse = " "),"\n",paste(tax_s[(tax_l1+1):tax_l2],collapse = " "),"\n",paste(tax_s[(tax_l2+1):tax_l],collapse = " "))
}
}else{
tax_name1=tax_name
}
}else{
tax_name=paste0("p__",strsplit(rownames(tab1n)[i],"--p__")[[1]][2])
if(nchar(tax_name)>60&nchar(tax_name)<100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = ";"),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = ";"))
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_name1=paste0(paste(tax_s[1:3],collapse = ";"),"\n",paste(tax_s[4:5],collapse = ";"),"\n",paste(tax_s[6:tax_l],collapse = ";"))
}else{
tax_name1=tax_name
}
}
if(pval_s[i]<0.001){
wil_p=formatC(as.numeric(pval_s[i]), format = "e", digits = 2)
}else{
wil_p=formatC(as.numeric(pval_s[i]), digits = 2)
}
if(fdrs_s[i]<0.001){
wil_fdr=formatC(as.numeric(fdrs_s[i]), format = "e", digits = 2)
}else{
wil_fdr=formatC(as.numeric(fdrs_s[i]), digits = 2)
}
boxplot(as.numeric(tab1n[i,])~metadata[,test_metadata],main=paste(tax_name1,"\nP =",wil_p,"\nFDR =",wil_fdr),border=palette_group,col="white",xlab=test_metadata,ylab="normalized abundance",cex.main=0.8,las=xlab_direction)
stripchart(as.numeric(tab1n[i,])~metadata[,test_metadata],vertical = TRUE,  method = "jitter", add = TRUE, pch = 16, col = palette_group)
}
}
#' Boxplots of individual taxa with stats
#' @keywords individual taxa, boxplot, stats
#' @export
#' @examples
#'
taxa_boxplot=function(taxa_table = NULL, metadata=NULL,test_metadata=NULL,test_metadata_order="default",one_level=F,fdrs=NULL,log_norm=T,cutoff=0.1,xlab_direction=1,page=1,palette_group=c("red","blue","orange","green"),taxa_shown=""){
tab=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[match(intersect(colnames(tab),rownames(metadata)),rownames(metadata)),]
if(is.factor(metadata[,test_metadata])){
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
}else{
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
}
if(test_metadata_order!="default"){
metadata[,test_metadata]=factor(metadata[,test_metadata],levels=test_metadata_order)
}
if(taxa_shown==""){
tab1=tab
fdrs1=fdrs
}else{
tab1=tab[grep(taxa_shown,rownames(tab)),]
fdrs1=fdrs[grep(taxa_shown,rownames(fdrs)),]
}
sig_l=length(which(fdrs1[,3]<cutoff))
tab1n=tab1[order(fdrs1[,2]),][1:sig_l,]
pval_s=as.numeric(fdrs1[,2][order(fdrs1[,2])][1:sig_l])
fdrs_s=as.numeric(fdrs1[,3][order(fdrs1[,2])][1:sig_l])
if(log_norm){
tab1n=log10(tab1n+1)
}
x1=ceiling(nrow(tab1n)/9)
if(page>x1){
stop("No taxa in this page!")
}
if(x1==0){
l1=c(1:nrow(tab1n))
}else{
if(page==x1){
l1=c((page*9-8):nrow(tab1n))
}else{
l1=c((page*9-8):(page*9))
}
}
par(mfrow=c(3,3),mar=c(5,5,5,5))
for (i in l1){
if (one_level){
tax_name1=rownames(tab1n)[i]
}else{
tax_name=paste0("p__",strsplit(rownames(tab1n)[i],"--p__")[[1]][2])
if(nchar(tax_name)>60&nchar(tax_name)<100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_li=round(tax_l/2)
tax_name1=paste0(paste(tax_s[1:tax_li],collapse = ";"),"\n",paste(tax_s[(tax_li+1):tax_l],collapse = ";"))
}else if(nchar(tax_name)>=100){
tax_s=strsplit(tax_name,"--")[[1]]
tax_l=length(tax_s)
tax_name1=paste0(paste(tax_s[1:3],collapse = ";"),"\n",paste(tax_s[4:5],collapse = ";"),"\n",paste(tax_s[6:tax_l],collapse = ";"))
}else{
tax_name1=tax_name
}
}
if(pval_s[i]<0.001){
wil_p=formatC(as.numeric(pval_s[i]), format = "e", digits = 2)
}else{
wil_p=formatC(as.numeric(pval_s[i]), digits = 2)
}
if(fdrs_s[i]<0.001){
wil_fdr=formatC(as.numeric(fdrs_s[i]), format = "e", digits = 2)
}else{
wil_fdr=formatC(as.numeric(fdrs_s[i]), digits = 2)
}
boxplot(as.numeric(tab1n[i,])~metadata[,test_metadata],main=paste(tax_name1,"\nP =",wil_p,"\nFDR =",wil_fdr),border=palette_group,col="white",xlab=test_metadata,ylab="normalized abundance",cex.main=0.8,las=xlab_direction)
stripchart(as.numeric(tab1n[i,])~metadata[,test_metadata],vertical = TRUE,  method = "jitter", add = TRUE, pch = 16, col = palette_group)
}
}
taxa_boxplot(taxa_table = tab_s, metadata=metadata1,one_level=T,test_metadata="group",fdrs=fdrs1,log_norm=T,cutoff=0.01,palette_group=c("red","blue","orange","green"))
taxa_boxplot_download(taxa_table = tab_s, metadata=metadata1,one_level=T,test_metadata="group",fdrs=fdrs1,log_norm=T,cutoff=0.01,palette_group=c("red","blue","orange","green"))
head(metadata1)
cor_plot1=meta_corplot(taxa_table =tab_s, metadata=metadata1,test_metadata="time",col_metadata="group",fdr_cutoff=0.1)
cor_plot1=meta_corplot(taxa_table =tab_s, metadata=metadata1,test_metadata="time",col_metadata="group",fdr_cutoff=1)
cor_plot1
cor_plot1=meta_corplot(taxa_table =tab_s, metadata=metadata1,test_metadata="time",col_metadata="group",fdr_cutoff=1,one_level = T)
cor_plot1
cor_plot1=meta_corplot_download(taxa_table =tab_s, metadata=metadata1,test_metadata="time",col_metadata="group",fdr_cutoff=1,one_level = T)
cor_plot1=meta_corplot_download(taxa_table =tab_s, metadata=metadata1,test_metadata="time",col_metadata="group",fdr_cutoff=0.81,one_level = T)
cor_plot1=meta_corplot_download(taxa_table =tab_s, metadata=metadata1,test_metadata="time",col_metadata="group",fdr_cutoff=0.806,one_level = T)
cor_plot1
library(shiny)
