setwd("/Users/shansun/git/plotmicrobiome")
library("devtools")
library(roxygen2)
document()
setwd("..")
install("plotmicrobiome")
library(plotmicrobiome)
format_asv
table_subset
format_wgs
library(plotmicrobiome)
detach(plotmicrobiome,unload=T)
detach(name=plotmicrobiome,unload=T)
?detach
detach(package:plotmicrobiome,unload=T)
detach(package:ggmicrobiome,unload=T)
detach(package:ggmicrobe,unload=T)
install("plotmicrobiome")
libary(plotmicrobiome)
library(plotmicrobiome)
format_asv
#mutliple taxonomic tables, for example, with one for each level
taxa_table1=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/multiple_tsv")
#mutliple taxonomic tables in biom formats, for example, with one for each level
taxa_table2=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/multiple_biom",biom=T)
#ASV table (biom) from DADA2 with the taxonomy listed as the last column
taxa_table3=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/biom_taxonomy.biom",biom=T,onefile = T,ASV=T)
#ASV table (text) from DADA2 with the taxonomy listed as the last column
taxa_table4=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/table_taxonomy.txt",biom=F,onefile = T,ASV=T)
#One taxonomic table (test) with all levels
taxa_table5=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/taxa_all.csv",sep=",",biom=F,onefile = T,ASV=F)
taxa_table6=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/taxa_all.txt",sep="\t",biom=F,onefile = T,ASV=F)
#One taxonomic table (biom) with all levels
taxa_table7=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/table.from_txt_hdf5.biom",biom=T,onefile = T,ASV=F)
taxa_table8=format_asv(taxa_file = "/Users/shansun/git/plotmicrobiome/data-raw/table.from_txt_json.biom",biom=T,onefile = T,ASV=F)
taxa_table="/Users/shansun/git/plotmicrobiome/data-raw/biom_taxonomy.biom"
metadata_dir="/Users/shansun/git/plotmicrobiome/data-raw/metadata_cafe.csv"
taxa_table="/Users/shansun/git/plotmicrobiome/data-raw/multiple_biom"
#format the raw taxonomic abudance table
taxa_tab1=format_asv(taxa_file = taxa_table,biom=T)
#format metadata
metadata1=meta_format(metadata=metadata_dir,metadata_sep=",",meta_sample_name_col=2)
#subset the abundance table to only include samples for test
tab_s=table_subset(taxa_table = taxa_tab1,metadata=metadata1,stratify_by_metadata="Study",stratify_by_value="Sugar")
#perform statistical test
fdrs1=stat_test(taxa_table =tab_s,metadata=metadata1,test_metadata="Timepoint",method="wilcoxon")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
install("plotmicrobiome")
install("plotmicrobiome")
library("plotmicrobiome")
#tree plot
plot1=tree_view(taxa_table =tab_s, metadata=metadata1,fdrs=fdrs1,test_metadata="Timepoint",fdr_cutoff=0.1)
plot1
runApp('plotmicrobiome/R')
runApp('plotmicrobiome/R')
runApp('plotmicrobiome/R')
?metaMDS
taxa_table = tab_s
metadata=metadata1
test_metadata="group"
distance_type="bray"
metadata=metadata[which(!is.na(metadata[,test_metadata])),]
tab1=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[intersect(colnames(tab1),rownames(metadata)),]
head(tab_s[,1:6])
head(metadata)
test_metadata="Study"
metadata=metadata[which(!is.na(metadata[,test_metadata])),]
tab1=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[intersect(colnames(tab1),rownames(metadata)),]
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
tax_l=sapply(strsplit(rownames(tab1),"--"),function(i){length(i)})
level1=c("kingdom","phylum","class","order","family","genus","species","strain")
level_n=c(1:8)
tab1n=tab1[which(tax_l==level_n[match(taxa_level,level1)]),]
taxa_level="genus"
ado_p1=as.numeric(unlist(vegan::adonis(t(tab1n)~metadata[,test_metadata])$"aov.tab"[1,5:6]))
tab1n=tab1[which(tax_l==level_n[match(taxa_level,level1)]),]
ado_p1=as.numeric(unlist(vegan::adonis(t(tab1n)~metadata[,test_metadata])$"aov.tab"[1,5:6]))
test_metadata
metadata[,test_metadata]
metadata[[test_metadata]]
test_metadata="Timepoint"
metadata=metadata[which(!is.na(metadata[,test_metadata])),]
tab1=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[intersect(colnames(tab1),rownames(metadata)),]
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
tax_l=sapply(strsplit(rownames(tab1),"--"),function(i){length(i)})
level1=c("kingdom","phylum","class","order","family","genus","species","strain")
level_n=c(1:8)
tab1n=tab1[which(tax_l==level_n[match(taxa_level,level1)]),]
ado_p1=as.numeric(unlist(vegan::adonis(t(tab1n)~metadata[,test_metadata])$"aov.tab"[1,5:6]))
ado_p1
gen_mds=vegan::metaMDS(t(tab1n),distance=distance_type)
gen_mds
summary( gen_mds)
summary(gen_mds)$stress
summary(gen_mds)[["stress"]]
gen_mds$stress
gen_mds$grstress
paste(test_metadata,"stress =",round(gen_mds$grstress,5),"\nR2 =",round(ado_p1[1],5)," P=",ado_p1[2])
pcoa12=ordiplot(gen_mds,type="none",cex.lab=1.5,xlab=pcoa_p[1],ylab=pcoa_p[2],main=main1,xlim=c(min(summary(gen_pcoa)$sites[,1])-1.2,max(summary(gen_pcoa)$sites[,1])+0.5))
pcoa12=vegan::ordiplot(gen_mds,type="none",cex.lab=1.5,xlab=pcoa_p[1],ylab=pcoa_p[2],main=main1,xlim=c(min(summary(gen_pcoa)$sites[,1])-1.2,max(summary(gen_pcoa)$sites[,1])+0.5))
gen_mds$sites
gen_mds$samples
names(gen_mds)
gen_mds$points
vegan::ordiplot(gen_mds,choices=c(xaxis,yaxis),type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-1.2,max(gen_mds$points[,1])+0.5))
vegan::ordiplot(gen_mds,type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-1.2,max(gen_mds$points[,1])+0.5))
mds_p=paste("NMDS",c(1:6),sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2],"\nstress =",round(gen_mds$grstress,5))
vegan::ordiplot(gen_mds,type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-1.2,max(gen_mds$points[,1])+0.5))
vegan::ordiplot(gen_mds,choices=c(1,2),type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-1.2,max(gen_mds$points[,1])+0.5))
vegan::ordiplot(gen_mds,choices=c(3,4),type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-1.2,max(gen_mds$points[,1])+0.5))
method_mds="nmds"
metadata=metadata[which(!is.na(metadata[,test_metadata])),]
tab1=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[intersect(colnames(tab1),rownames(metadata)),]
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
tax_l=sapply(strsplit(rownames(tab1),"--"),function(i){length(i)})
level1=c("kingdom","phylum","class","order","family","genus","species","strain")
level_n=c(1:8)
tab1n=tab1[which(tax_l==level_n[match(taxa_level,level1)]),]
ado_p1=as.numeric(unlist(vegan::adonis(t(tab1n)~metadata[,test_metadata])$"aov.tab"[1,5:6]))
par(mfrow=c(1,1),mar=c(5,5,5,5))
if(method_mds=="pcoa"){
gen_mds=vegan::capscale(t(tab1n)~1,distance=distance_type)
var_per=round((gen_mds$CA$eig/sum(gen_mds$CA$eig))[1:6]*100,2)
mds_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2])
pcoa12=vegan::ordiplot(gen_mds,choices=c(xaxis,yaxis),type="none",cex.lab=1.5,xlab=pcoa_p[1],ylab=pcoa_p[2],main=main1,xlim=c(min(summary(gen_pcoa)$sites[,1])-1.2,max(summary(gen_pcoa)$sites[,1])+0.5))
}else if (method_mds=="nmds"){
gen_mds=vegan::metaMDS(t(tab1n),distance=distance_type)
mds_p=paste("NMDS",c(1:6),sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2],"\nstress =",round(gen_mds$grstress,5))
pcoa12=vegan::ordiplot(gen_mds,type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-1.2,max(gen_mds$points[,1])+0.5))
}else{
stop("Please use pcoa or nmds for method_mds")
}
col3=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][factor(metadata[,test_metadata])]
pch1=16
points(pcoa12,"sites",col=adjustcolor(col3, alpha.f = 0.3),pch=pch1,cex=1.5)
palette_group=c("red","blue","orange","green")
col3=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][factor(metadata[,test_metadata])]
pch1=16
points(pcoa12,"sites",col=adjustcolor(col3, alpha.f = 0.3),pch=pch1,cex=1.5)
for (j in 1:length(levels(metadata[,test_metadata]))){
ordiellipse(pcoa12, metadata[,test_metadata], kind="se", conf=0.95, lwd=1, draw = "lines", col=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][j],show.groups=levels(metadata[,test_metadata])[j],label=T,font=2,cex=1.3)
}
runApp('plotmicrobiome/R')
install("plotmicrobiome")
install("plotmicrobiome")
setwd("plotmicrobiome")
document()
rm(list = c())
rm(list = c("metadata"))
document()
setwd("..")
install("plotmicrobiome")
library(plotmicrobiome)
runApp('plotmicrobiome/R')
format_asv
library(plotmicrobiome)
format_asv
install("plotmicrobiome")
library(plotmicrobiome)
format_asv
runApp('plotmicrobiome/R')
method_mds="pcoa"
gen_mds=vegan::capscale(t(tab1n)~1,distance=distance_type)
var_per=round((gen_mds$CA$eig/sum(gen_mds$CA$eig))[1:6]*100,2)
mds_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2])
pcoa12=vegan::ordiplot(gen_mds,choices=c(xaxis,yaxis),type="none",cex.lab=1.5,xlab=pcoa_p[1],ylab=pcoa_p[2],main=main1,xlim=c(min(summary(gen_pcoa)$sites[,1])-1.2,max(summary(gen_pcoa)$sites[,1])+0.5))
gen_mds=vegan::capscale(t(tab1n)~1,distance=distance_type)
var_per=round((gen_mds$CA$eig/sum(gen_mds$CA$eig))[1:6]*100,2)
mds_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2])
pcoa12=vegan::ordiplot(gen_mds,choices=c(xaxis,yaxis),type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(summary(gen_mds)$sites[,1])-0.3,max(summary(gen_mds)$sites[,1])+0.3))
xaxis=1
yaxis=2
pcoa12=vegan::ordiplot(gen_mds,choices=c(xaxis,yaxis),type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(summary(gen_mds)$sites[,1])-0.3,max(summary(gen_mds)$sites[,1])+0.3))
col3=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][factor(metadata[,test_metadata])]
install("plotmicrobiome")
library(plotmicrobiome)
runApp('plotmicrobiome/R')
#PCoA plot
pcoa_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="group",palette_group=c("red","blue","orange","green"),distance_type="bray")
#PCoA plot
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="group",method_mds = "pcoa",palette_group=c("red","blue","orange","green"),distance_type="bray")
(taxa_table = tab_s
metadata=metadata1
taxa_table = tab_s
head(tab_s)
metadata=metadata1
head(metadata1)
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="Study",method_mds = "pcoa",palette_group=c("red","blue","orange","green"),distance_type="bray")
test_metadata="Study"
method_mds = "pcoa"
metadata=metadata[which(!is.na(metadata[,test_metadata])),]
tab1=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[intersect(colnames(tab1),rownames(metadata)),]
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
tax_l=sapply(strsplit(rownames(tab1),"--"),function(i){length(i)})
level1=c("kingdom","phylum","class","order","family","genus","species","strain")
level_n=c(1:8)
tab1n=tab1[which(tax_l==level_n[match(taxa_level,level1)]),]
ado_p1=as.numeric(unlist(vegan::adonis(t(tab1n)~metadata[,test_metadata])$"aov.tab"[1,5:6]))
dim(tab1n)
dim(metadata)
metadata[,test_metadata]
test_metadata="Timepoint"
metadata=metadata[which(!is.na(metadata[,test_metadata])),]
tab1=taxa_table[,intersect(colnames(taxa_table),rownames(metadata))]
metadata=metadata[intersect(colnames(tab1),rownames(metadata)),]
metadata[,test_metadata]=factor(as.character(metadata[,test_metadata]))
metadata[,test_metadata]=droplevels(metadata[,test_metadata])
tax_l=sapply(strsplit(rownames(tab1),"--"),function(i){length(i)})
level1=c("kingdom","phylum","class","order","family","genus","species","strain")
level_n=c(1:8)
tab1n=tab1[which(tax_l==level_n[match(taxa_level,level1)]),]
ado_p1=as.numeric(unlist(vegan::adonis(t(tab1n)~metadata[,test_metadata])$"aov.tab"[1,5:6]))
par(mfrow=c(1,1),mar=c(5,5,5,5))
if(method_mds=="pcoa"){
gen_mds=vegan::capscale(t(tab1n)~1,distance=distance_type)
var_per=round((gen_mds$CA$eig/sum(gen_mds$CA$eig))[1:6]*100,2)
mds_p=paste("PCoA",c(1:6)," (",var_per,"%)",sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2])
pcoa12=vegan::ordiplot(gen_mds,choices=c(xaxis,yaxis),type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(summary(gen_mds)$sites[,1])-0.3,max(summary(gen_mds)$sites[,1])+0.3))
}else if (method_mds=="nmds"){
gen_mds=vegan::metaMDS(t(tab1n),distance=distance_type)
mds_p=paste("NMDS",c(1:6),sep="")
main1=paste(test_metadata,"R2 =",round(ado_p1[1],5)," P=",ado_p1[2],"\nstress =",round(gen_mds$grstress,5))
pcoa12=vegan::ordiplot(gen_mds,type="none",cex.lab=1.5,xlab=mds_p[1],ylab=mds_p[2],main=main1,xlim=c(min(gen_mds$points[,1])-0.3,max(gen_mds$points[,1])+0.3))
}else{
stop("Please use pcoa or nmds for method_mds")
}
col3=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][factor(metadata[,test_metadata])]
pch1=16
points(pcoa12,"sites",col=adjustcolor(col3, alpha.f = 0.3),pch=pch1,cex=1.5)
for (j in 1:length(levels(metadata[,test_metadata]))){
ordiellipse(pcoa12, metadata[,test_metadata], kind="se", conf=0.95, lwd=1, draw = "lines", col=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][j],show.groups=levels(metadata[,test_metadata])[j],label=T,font=2,cex=1.3)
}
library(vegan)
for (j in 1:length(levels(metadata[,test_metadata]))){
ordiellipse(pcoa12, metadata[,test_metadata], kind="se", conf=0.95, lwd=1, draw = "lines", col=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))][j],show.groups=levels(metadata[,test_metadata])[j],label=T,font=2,cex=1.3)
}
legend("topright",levels(factor(metadata[,test_metadata])), cex=1.2, bty="n", col=palette_group[match(levels(metadata[,test_metadata]),levels(metadata[,test_metadata]))], pch=16)
runApp('plotmicrobiome/R')
#PCoA plot
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="group",method_mds = "pcoa",palette_group=c("red","blue","orange","green"),distance_type="bray")
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="Timepoint",method_mds = "pcoa",palette_group=c("red","blue","orange","green"),distance_type="bray")
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="Study",method_mds = "pcoa",palette_group=c("red","blue","orange","green"),distance_type="bray")
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="Study",method_mds = "nmds",palette_group=c("red","blue","orange","green"),distance_type="bray")
mds_plot(taxa_table = tab_s, metadata=metadata1,test_metadata="Timepoint",method_mds = "nmds",palette_group=c("red","blue","orange","green"),distance_type="bray")
runApp('plotmicrobiome/R')
runApp('plotmicrobiome/R')
runApp('plotmicrobiome/R')
install("plotmicrobiome")
library("plotmicrobiome")
runApp('plotmicrobiome/R')
runGitHub( "plotmicrobiome", "ssun6")
install_github("plotmicrobiome", "ssun6")
runGitHub( "plotmicrobiome", "ssun6")
runApp("plotmicrobiome")
rlang::last_error()
runApp("plotmicrobiome")
setwd("plotmicrobiome")
runApp("plotmicrobiome")
